# pylint: disable=no-name-in-module

from dataclasses import dataclass

from pydantic import BaseModel


class GenerateRequest(BaseModel):
    text: str


class SetMessagePossibleContextIds(BaseModel):
    """Ids of messages using model generated."""

    possible_contexts_ids: list[str]


class SetUserChoice(BaseModel):
    """User choice."""

    message_id: str


class SetUserCustomAnswer(BaseModel):
    """Custom user text to replace model answer."""

    message_id: str
    custom_text: str


@dataclass
class GenerationLLMResponse:
    """Text generated by LLM."""

    texts: list[str]

    def __init__(self, texts: list[str]):
        super().__init__()
        self.texts = texts


@dataclass
class GenerationChoiceResponse:
    """Text generated by LLM with answer id."""

    messages: list
    answer_id: str

    def __init__(self, messages, answer_id):
        super().__init__()
        self.messages = messages
        self.answer_id = answer_id


class UserCreateRequest(BaseModel):
    """Placeholder for user data."""

    username: str
    user_id: str
    chat_id: str
